{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santiago\\\\Desktop\\\\Universidad\\\\S\\xE9ptimo semestre\\\\Inteligencia de Negocios\\\\Proyecto 1 - Etapa 2\\\\Proyecto definitivo\\\\frontend\\\\src\\\\components\\\\CsvPrediction.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CsvPrediction = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [downloadUrl, setDownloadUrl] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files ? e.target.files[0] : null);\n    setDownloadUrl(null);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (file) {\n      setIsUploading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/predict_file\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          responseType: \"blob\"\n        });\n        const csvBlob = new Blob([response.data], {\n          type: \"text/csv\"\n        });\n        const url = window.URL.createObjectURL(csvBlob);\n        setDownloadUrl(url);\n        setIsUploading(false);\n      } catch (error) {\n        console.error(\"Error uploading file: \", error);\n        setIsUploading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      maxWidth: \"500px\",\n      margin: \"0 auto\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: \"Predicci\\xF3n por Archivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cargar archivo CSV o XLSX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formFile\",\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: isUploading ? \"danger\" : \"success\",\n        type: \"submit\",\n        disabled: !file || isUploading,\n        children: isUploading ? \"Cargando...\" : \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), downloadUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-4\",\n        children: \"Predicciones Completadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadUrl,\n        download: `predictions_${file === null || file === void 0 ? void 0 : file.name}`,\n        className: \"btn btn-success mt-3\",\n        children: \"Descargar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(CsvPrediction, \"lv+v1xxoy4NJmPWtzRo2XM/aTlQ=\");\n_c = CsvPrediction;\nexport default CsvPrediction;\nvar _c;\n$RefreshReg$(_c, \"CsvPrediction\");","map":{"version":3,"names":["React","axios","useState","Button","Form","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","CsvPrediction","_s","file","setFile","isUploading","setIsUploading","downloadUrl","setDownloadUrl","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","responseType","csvBlob","Blob","data","type","url","window","URL","createObjectURL","error","console","style","maxWidth","margin","textAlign","children","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","className","Control","onChange","variant","disabled","href","download","name","_c","$RefreshReg$"],"sources":["C:/Users/Santiago/Desktop/Universidad/Séptimo semestre/Inteligencia de Negocios/Proyecto 1 - Etapa 2/Proyecto definitivo/frontend/src/components/CsvPrediction.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Button, Form, Container } from \"react-bootstrap\";\r\n\r\nconst CsvPrediction = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [downloadUrl, setDownloadUrl] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files ? e.target.files[0] : null);\r\n        setDownloadUrl(null);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (file) {\r\n            setIsUploading(true);\r\n            const formData = new FormData();\r\n            formData.append(\"file\", file);\r\n\r\n            try {\r\n                const response = await axios.post(\r\n                    \"http://127.0.0.1:8000/predict_file\",\r\n                    formData,\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\",\r\n                        },\r\n                        responseType: \"blob\",\r\n                    }\r\n                );\r\n                \r\n                const csvBlob = new Blob([response.data], { type: \"text/csv\" });\r\n                const url = window.URL.createObjectURL(csvBlob);\r\n                \r\n                setDownloadUrl(url);\r\n                setIsUploading(false);\r\n            } catch (error) {\r\n                console.error(\"Error uploading file: \", error);\r\n                setIsUploading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container style={{ maxWidth: \"500px\", margin: \"0 auto\", textAlign: \"center\" }}>\r\n            <h1 style={{ fontWeight: \"bold\" }}>Predicción por Archivo</h1>\r\n            <h4>Cargar archivo CSV o XLSX</h4>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Control type=\"file\" onChange={handleFileChange} />\r\n                </Form.Group>\r\n                <Button\r\n                    variant={isUploading ? \"danger\" : \"success\"}\r\n                    type=\"submit\"\r\n                    disabled={!file || isUploading}\r\n                >\r\n                    {isUploading ? \"Cargando...\" : \"Enviar\"}\r\n                </Button>\r\n            </Form>\r\n\r\n            {/* Mostrar la sección de descarga solo si downloadUrl no es null */}\r\n            {downloadUrl && (\r\n                <>\r\n                    <h4 className=\"mt-4\">Predicciones Completadas</h4>\r\n                    <a\r\n                        href={downloadUrl}\r\n                        download={`predictions_${file?.name}`}\r\n                        className=\"btn btn-success mt-3\"\r\n                    >\r\n                        Descargar\r\n                    </a>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CsvPrediction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}